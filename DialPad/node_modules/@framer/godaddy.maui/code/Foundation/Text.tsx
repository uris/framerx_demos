import * as React from "react"
import { Frame, addPropertyControls, ControlType } from "framer"
// @ts-ignore
import { textStyles, themeColors } from "./Shared"
// @ts-ignore
import Markdown from "markdown-to-jsx"

//  ------------------------------------------------------------------
//  TEXT COMPONENT

export function Text(props) {
    const {
        content,
        size,
        bold,
        color,
        align,
        mode,
        background,
        widthType,
        ...restProps
    } = props

    return (
        <Frame
            {...restProps}
            width={widthType}
            height="auto"
            background={background}
            color={themeColors[mode][color]}
            style={{
                ...textStyles[size],
                textAlign: align,
                fontFamily: bold ? "GDSherpa-Bold" : "GDSherpa-Semibold",
            }}
        >
            <Markdown
                options={{
                    overrides: {
                        a: {
                            props: {
                                style: {
                                    textDecoration: "none",
                                    color:
                                        themeColors[mode]["contentHighlight"],
                                },
                            },
                        },
                    },
                }}
            >
                {content}
            </Markdown>
        </Frame>
    )
}

//  ------------------------------------------------------------------
//  PROPS

Text.defaultProps = {
    width: 311,
    height: 24,
    content: "Hello",
    size: "title",
    bold: false,
    color: "contentPrimary",
    align: "center",
    mode: "light",
    background: "none",
    widthType: "100%",
}

addPropertyControls(Text, {
    content: {
        title: "Content",
        type: ControlType.String,
    },
    size: {
        title: "Size",
        type: ControlType.Enum,
        options: [
            "large",
            "h1",
            "h2",
            "h3",
            "h4",
            "title",
            "body",
            "detail",
            "caption1",
            "caption2",
            "small",
        ],
        optionTitles: [
            "Large (S:40 H:56)",
            "H1 (S:30 H:40)",
            "H2 (S:26 H:32)",
            "H3 (S:22 H:28)",
            "H4 (S:20 H:26)",
            "Title (S:18 H:24)",
            "Body (S:16 H:22)",
            "Detail (S:14 H:20)",
            "Caption1 (S:13 H:18)",
            "Caption2 (S:12 H:16)",
            "Small (S:10 H:14)",
        ],
    },
    bold: {
        title: "Bold",
        type: ControlType.Boolean,
    },
    color: {
        title: "Color",
        type: ControlType.Enum,
        options: [
            "contentPrimary",
            "contentSecondary",
            "contentTertiary",
            "contentHighlight",
            "contentImportant",
            "contentButtonPrimary",
            "contentButtonSecondary",
        ],
        optionTitles: [
            "Primary",
            "Secondary",
            "Tertiary",
            "Highlight",
            "Important",
            "Button (Primary)",
            "Button (Secondary)",
        ],
    },
    align: {
        title: "Align",
        type: ControlType.SegmentedEnum,
        options: ["left", "center", "right"],
        optionTitles: ["Left", "Center", "Right"],
    },
    mode: {
        type: ControlType.SegmentedEnum,
        title: "Mode",
        options: ["light", "dark"],
        optionTitles: ["Light", "Dark"],
        defaultValue: "light",
    },
    background: {
        title: "Bg",
        type: ControlType.Color,
    },
    widthType: {
        type: ControlType.SegmentedEnum,
        title: "Width",
        options: ["auto", "100%"],
        optionTitles: ["Auto", "100%"],
        defaultValue: "100%",
    },
})
